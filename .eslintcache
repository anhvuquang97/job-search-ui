[{"C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\index.js":"1","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\reportWebVitals.js":"2","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\App.js":"3","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Home\\HomePage.js":"4","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\components\\SearchBar\\SearchBar.js":"5","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\components\\Cards\\CardJob.js":"6","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Employer\\EmployerPage.js":"7","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\components\\Cards\\CompanyTitleCard.js":"8","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\components\\Navbar\\Navbar.js":"9","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\components\\Layout\\MainLayout.js":"10","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Auth\\Signin.js":"11","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Auth\\Signup.js":"12","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\api\\api.js":"13","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\components\\Pagination\\Pagination.js":"14","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\components\\Footer\\Footer.js":"15","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Job\\DetailJobPage.js":"16","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\components\\Cards\\JobTitleCard.js":"17","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Job\\ApplyJobPage.js":"18","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Cv\\UploadCvPage.js":"19","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\firebase\\firebase.js":"20","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Employee\\UpdateProfile.js":"21","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Employee\\ManageApplication.js":"22","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Employer\\UpdateProfile.js":"23","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Job\\CreateJobPage.js":"24","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\utils\\convertVND.js":"25","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\utils\\data.js":"26","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Employer\\ManageJobPosts.js":"27","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Job\\ListApplicants.js":"28","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\utils\\verifyForm.js":"29"},{"size":589,"mtime":1610097043297,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"31"},{"size":3891,"mtime":1611196758932,"results":"33","hashOfConfig":"31"},{"size":2459,"mtime":1611115686729,"results":"34","hashOfConfig":"31"},{"size":4728,"mtime":1610640871500,"results":"35","hashOfConfig":"31"},{"size":1662,"mtime":1611116038528,"results":"36","hashOfConfig":"31"},{"size":3308,"mtime":1611115712965,"results":"37","hashOfConfig":"31"},{"size":1236,"mtime":1610606234757,"results":"38","hashOfConfig":"31"},{"size":2006,"mtime":1611229112577,"results":"39","hashOfConfig":"31"},{"size":354,"mtime":1610180658393,"results":"40","hashOfConfig":"31"},{"size":3076,"mtime":1611159884115,"results":"41","hashOfConfig":"31"},{"size":3699,"mtime":1611159942177,"results":"42","hashOfConfig":"31"},{"size":630,"mtime":1610163969963,"results":"43","hashOfConfig":"31"},{"size":1064,"mtime":1611229908804,"results":"44","hashOfConfig":"31"},{"size":382,"mtime":1611230010816,"results":"45","hashOfConfig":"31"},{"size":2215,"mtime":1611114913177,"results":"46","hashOfConfig":"31"},{"size":2578,"mtime":1611219761790,"results":"47","hashOfConfig":"31"},{"size":3406,"mtime":1611228950776,"results":"48","hashOfConfig":"31"},{"size":3644,"mtime":1611228651219,"results":"49","hashOfConfig":"31"},{"size":532,"mtime":1610353774399,"results":"50","hashOfConfig":"31"},{"size":3017,"mtime":1611164193781,"results":"51","hashOfConfig":"31"},{"size":3869,"mtime":1611228387907,"results":"52","hashOfConfig":"31"},{"size":9248,"mtime":1611198875850,"results":"53","hashOfConfig":"31"},{"size":5424,"mtime":1611198969599,"results":"54","hashOfConfig":"31"},{"size":222,"mtime":1610600630524,"results":"55","hashOfConfig":"31"},{"size":3702,"mtime":1610600772034,"results":"56","hashOfConfig":"31"},{"size":4840,"mtime":1611124871391,"results":"57","hashOfConfig":"31"},{"size":4550,"mtime":1611127052021,"results":"58","hashOfConfig":"31"},{"size":830,"mtime":1611198764779,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"z18nye",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\index.js",[],["128","129"],"C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\reportWebVitals.js",[],"C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\App.js",["130","131","132"],"import 'bootstrap/dist/css/bootstrap.min.css'\nimport {Switch, Route} from \"react-router-dom\"\nimport {useState, useEffect, createContext, useRef} from 'react'\nimport {Spinner} from 'react-bootstrap'\nimport HomePage from './pages/Home/HomePage'\nimport EmployerPage from './pages/Employer/EmployerPage'\nimport Signin from './pages/Auth/Signin'\nimport Signup from './pages/Auth/Signup'\nimport api from './api/api'\nimport {io} from 'socket.io-client'\nimport DetailJobPage from './pages/Job/DetailJobPage'\nimport ApplyJobPage from './pages/Job/ApplyJobPage'\nimport UploadCvPage from './pages/Cv/UploadCvPage'\nimport EmployeeUpdateProfile from './pages/Employee/UpdateProfile'\nimport EmployerUpdateProfile from './pages/Employer/UpdateProfile'\nimport ManageApplication from './pages/Employee/ManageApplication'\nimport CreateJobPage from './pages/Job/CreateJobPage'\nimport ManageJobPosts from './pages/Employer/ManageJobPosts'\nimport ListApplicants from './pages/Job/ListApplicants'\n\nexport const AuthContext = createContext()\nexport const SocketContext = createContext()\n\nfunction App() {\n  const [user, setUser] = useState(null)\n  const [role, setRole] = useState(null)\n  const [loading, setLoading] = useState(false)\n  const [resumes, setResumes] = useState(null)\n  const socket = useRef(null)\n\n  const verifyAuth = async (role) => {\n    setLoading(true)\n    try {\n      const res = await api({\n        url:`/${role}/verify`,\n        method:'GET'\n      })\n      setLoading(false)\n      if(res.success) {\n        setUser(res.data)\n        setRole(role)\n        if(role==='employee'){\n          fetchResumes()\n        }\n      }\n    } catch (error) {\n      setLoading(false) \n    }\n  }\n\n  const fetchResumes = async () => {\n    const response = await api({\n      url:'/resume',\n      method:'GET',\n    })\n    if(response.success) setResumes(response.data.resume)\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    const role = localStorage.getItem('role')\n    if(token) verifyAuth(role)\n    else setLoading(false)\n  }, [])\n\n  const signin = ({user, token}) => {\n    setUser(user)\n    localStorage.setItem('token',token)   \n    setRole(localStorage.getItem('role'))\n    if(localStorage.getItem('role') === 'employee') fetchResumes()\n  }\n\n  const signout = () => {\n    localStorage.removeItem('token')\n    localStorage.removeItem('role')\n    setUser(null)\n  }\n\n  if(loading) return <Spinner animation=\"border\" variant=\"dark\" />\n\n  return (\n    <AuthContext.Provider value={{user,resumes,setUser,setResumes,role,signin,signout}}>\n      \n      <div className=\"App\">\n        <Switch>\n          <Route path='/' exact>\n            <HomePage />\n          </Route>\n          <Route path='/signin' exact>\n            <Signin />\n          </Route>\n          <Route path='/signup' exact>\n            <Signup />\n          </Route>\n          <Route path='/company/:id' exact>\n            <EmployerPage />\n          </Route>\n          <Route path='/post/:id' exact>\n            <DetailJobPage />\n          </Route>\n          <Route path='/post/private/:id' exact>\n            <ListApplicants />\n          </Route>\n          <Route path='/apply/:id' exact>\n            <ApplyJobPage />\n          </Route>\n          <Route path='/uploadcv' exact>\n            {role === 'employee' && <UploadCvPage />}\n          </Route>\n          <Route path='/profile' exact>\n            {role === 'employee' && <EmployeeUpdateProfile />}\n            {role === 'employer' && <EmployerUpdateProfile />}\n          </Route>\n          <Route path='/applications' exact>\n            {role === 'employee' && <ManageApplication />}\n            {role === 'employer' && <ManageJobPosts />}\n          </Route>\n          <Route path='/create' exact>\n            {role ==='employer' && <CreateJobPage />}\n          </Route>\n        </Switch>\n      </div>\n      \n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Home\\HomePage.js",["133","134","135"],"import SearchBar from '../../components/SearchBar/SearchBar' \r\nimport CardJob from '../../components/Cards/CardJob'\r\nimport MainLayout from '../../components/Layout/MainLayout'\r\nimport api from '../../api/api'\r\nimport {useState,useEffect} from 'react'\r\nimport CustomPagination from '../../components/Pagination/Pagination'\r\n\r\nfunction HomePage() {\r\n    const [posts, setPosts] = useState([])\r\n    const [page, setPage] = useState(1) \r\n    const [total, setTotal] = useState(0)\r\n    const [limit, setLimit] = useState(4)\r\n    const [queries, setQueries] = useState({})\r\n\r\n    const fetchPosts = async({skills=null, range=null,location,category}) => {\r\n        const params = {page,limit}\r\n\r\n        if(skills) params.key = skills\r\n        if(range){\r\n            params.min = range[0]\r\n            params.max = range[1]\r\n        }\r\n        if(category) params.cate = category\r\n        if(location) params.loc = location\r\n        \r\n        try {\r\n            const res = await api({\r\n                url:'/post',\r\n                method:'GET',\r\n                params\r\n            }) \r\n\r\n            if(res.success) {\r\n                setPosts(res.data.posts)\r\n                setTotal(res.data.total)\r\n            }\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n \r\n    const renderPosts = (posts) => {\r\n        if(posts.length == 0) return (<div className=\"mt-5 mb-5\" ><h1>No job found...</h1></div>)\r\n        return posts.map(post => \r\n            <CardJob \r\n                logo={post.owner.logo}\r\n                locations={post.locations}\r\n                key={post._id}\r\n                title={post.title}\r\n                salary={post.salary}\r\n                id={post._id}\r\n                active={post.active}\r\n            />   \r\n        )\r\n    } \r\n\r\n    const onChangePage = (page) => {\r\n        setPage(page)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPosts(queries)\r\n    },[page,queries])\r\n\r\n    return (\r\n        <MainLayout>\r\n            <SearchBar \r\n                filterSearch={setQueries}\r\n            />\r\n            <div className=\"row d-flex justify-content-start ml-3\" >\r\n                {renderPosts(posts.filter(post => post.active))}\r\n            </div>\r\n            <CustomPagination \r\n                current={page}\r\n                total={total}\r\n                onChangePage={onChangePage}\r\n                limit={limit}\r\n            />\r\n        </MainLayout>\r\n    )\r\n}\r\n\r\nexport default HomePage ","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\components\\SearchBar\\SearchBar.js",[],"C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\components\\Cards\\CardJob.js",[],"C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Employer\\EmployerPage.js",["136","137","138","139"],"import CompanyTitleCard from '../../components/Cards/CompanyTitleCard'\r\nimport CardJob from '../../components/Cards/CardJob'\r\nimport MainLayout from '../../components/Layout/MainLayout'\r\nimport {Carousel} from 'react-bootstrap'\r\nimport {useParams} from 'react-router-dom' \r\nimport CustomPagination from '../../components/Pagination/Pagination'\r\nimport {useState, useEffect} from 'react'\r\nimport api from '../../api/api'\r\n\r\nfunction EmployerPage() {\r\n    const [page, setPage] = useState(1) \r\n    const [total, setTotal] = useState(0)\r\n    const [limit, setLimit] = useState(4)\r\n    const {id} = useParams()\r\n    const [posts, setPosts] = useState([])\r\n    const [company, setCompany] = useState({})\r\n    const [images, setImages] = useState([])\r\n    \r\n\r\n    const fetchPosts = async() => {\r\n        const params = {page,limit,company:id}\r\n        try {\r\n            const res = await api({\r\n                url:'/post',\r\n                method:'GET',\r\n                params\r\n            }) \r\n\r\n            if(res.success) {\r\n                setPosts(res.data.posts)\r\n                setTotal(res.data.total)\r\n            }\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n\r\n    const fetchCompany = async() => {\r\n        try {\r\n            const res = await api({\r\n                url:`employer/${id}`,\r\n                method:'GET'\r\n            }) \r\n            if(res.success) {\r\n                setCompany(res.data)\r\n                setImages(res.data.image)\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n\r\n    const renderPosts = (posts) => {\r\n        if(posts.length == 0) return (<div className=\"mt-5 mb-5\" ><h1>No job from this company...</h1></div>)\r\n        return posts.map(post => \r\n            <CardJob \r\n                logo={post.owner.logo}\r\n                locations={post.locations}\r\n                key={post._id}\r\n                title={post.title}\r\n                salary={post.salary}\r\n                id={post._id}\r\n                active={post.active}\r\n            />   \r\n        )\r\n    } \r\n\r\n    const renderImages = (images) => {\r\n        return images.map(img => \r\n            <Carousel.Item>\r\n                <img\r\n                className=\"d-block w-100\"\r\n                src={img}\r\n                />\r\n            </Carousel.Item>\r\n        )\r\n    }\r\n\r\n    const onChangePage = (page) => {\r\n        setPage(page)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchCompany()\r\n        fetchPosts()\r\n    },[page, id])\r\n\r\n    return (\r\n        <MainLayout>\r\n            <CompanyTitleCard \r\n            title={company.name}\r\n            location={company.location}\r\n            description={company.description}\r\n            logo={company.logo}\r\n            />\r\n            <Carousel className=\"p-5 mr-5 ml-5\">\r\n                {renderImages(images)}\r\n            </Carousel>\r\n\r\n            <h3 className=\"ml-4\">Recent Jobs</h3>\r\n            <div className=\"row d-flex justify-content-start ml-3\" >\r\n                {renderPosts(posts)}\r\n            </div> \r\n            <CustomPagination \r\n                current={page}\r\n                total={total}\r\n                onChangePage={onChangePage}\r\n                limit={limit}\r\n            />\r\n        </MainLayout>\r\n    )    \r\n}\r\nexport default EmployerPage","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\components\\Cards\\CompanyTitleCard.js",[],"C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\components\\Layout\\MainLayout.js",[],"C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Auth\\Signin.js",[],"C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Auth\\Signup.js",[],"C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\api\\api.js",[],"C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\components\\Pagination\\Pagination.js",[],"C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Job\\DetailJobPage.js",[],"C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\components\\Cards\\JobTitleCard.js",["140"],"import { useContext } from 'react'\r\nimport {Button} from 'react-bootstrap'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {AuthContext} from '../../App'\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney'\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn'\r\nimport FolderIcon from '@material-ui/icons/Folder'\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey'\r\n\r\nfunction JobTitleCard({title,logo,location,salary,id,keywords,categories,owner,active}){\r\n    const {user,role} = useContext(AuthContext)\r\n    const history = useHistory()\r\n \r\n    const handleClick = () => {\r\n        if(!user) return history.push(\"/signin\")\r\n        history.push(`/apply/${id}`)\r\n    }\r\n\r\n    const redirectCompany = () => {\r\n        history.push(`/company/${owner}`)\r\n    }\r\n\r\n    const renderItems = (items) => {\r\n        if(!items) return <p></p>\r\n        return items.map((item,index) => (\r\n            index !== items.length-1 ? <p className=\"ml-2\" key={index}>{item}, </p> : <p className=\"ml-2\" key={index}>{item} </p>\r\n        ))\r\n    }\r\n \r\n    return(\r\n        <>\r\n            <div className=\"row pb-2\" style={{ borderBottom: \"0.5px solid black\", marginTop: \"6rem\" }}>\r\n                <div className=\"col-md-3\">\r\n                    <img src={logo} style={{ width: '100%' }}/>\r\n                </div>\r\n                <div className=\"col-md-9\">\r\n                    <div className=\"d-flex justify-content-start\">\r\n                        <h2>{title}</h2>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-start mb-2\">\r\n                        <AttachMoneyIcon />\r\n                        {salary}\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-start\">\r\n                        <LocationOnIcon />\r\n                        {renderItems(location)}\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-start\">\r\n                        <FolderIcon />\r\n                        {renderItems(categories)}\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-start\">\r\n                        <VpnKeyIcon />\r\n                        {renderItems(keywords)}\r\n                    </div>\r\n                    {((role!=='employer' || !role) && active) && <Button variant=\"primary\" onClick={handleClick}>Apply Job</Button>}\r\n                    <Button variant=\"info\" className=\"ml-3\" onClick={redirectCompany}>View Company</Button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default JobTitleCard","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Job\\ApplyJobPage.js",["141"],"import CustomNavbar from '../../components/Navbar/Navbar'\r\nimport Footer from '../../components/Footer/Footer'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport { useState, useContext, useEffect } from 'react'\r\nimport {Redirect, Link, useParams, useHistory} from 'react-router-dom'\r\nimport {AuthContext} from '../../App'\r\nimport api from '../../api/api' \r\nimport Swal from 'sweetalert2'\r\n\r\nfunction ApplyJobPage(){\r\n    const {user,role,resumes} = useContext(AuthContext)\r\n    const {id} = useParams()\r\n    const [post,setPost] = useState(null)\r\n    const [form,setForm] = useState({resume:\"\",message:\"\"})\r\n    const history = useHistory()\r\n\r\n    const fetchPost = async(postId) => {\r\n        try {\r\n            const res = await api({\r\n                url: `/post/${postId}`,\r\n                method: 'GET'\r\n            })\r\n            if(res.success) setPost(res.data)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPost(id)\r\n    },[])\r\n\r\n    \r\n    const renderResume = (resumes) => {\r\n            \r\n        return resumes.map((resume,index) => <option key={resume._id} value={resume._id}>{resume.title}</option>)\r\n    }\r\n\r\n    const onChangeForm = (e) => {\r\n        const {name, value} = e.target\r\n        setForm({ \r\n            ...form,\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = async(e) => {\r\n        e.preventDefault()\r\n        if(!form.resume){\r\n            Swal.fire('Oops...', 'You need to attach a CV.', 'error')\r\n        }\r\n        else{\r\n            const customForm = {...form}\r\n            customForm.job = id\r\n            const res = await api({\r\n                url:'/application',\r\n                method:'POST',\r\n                data:customForm\r\n            })\r\n            if(res.success) history.push('/applications')\r\n        }\r\n    }\r\n        \r\n    if(!user || role==='employer') return <Redirect to=\"/\" /> \r\n\r\n    return(\r\n        <div>\r\n            <CustomNavbar />\r\n            <Form className=\"p-5 mt-5\" onSubmit={handleSubmitForm}>\r\n                <Form.Label><h2>{post && post.title}</h2></Form.Label>\r\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                    <Form.Label><strong>Attach your CV</strong></Form.Label>\r\n                    <Form.Control as=\"select\"\r\n                    required\r\n                    name=\"resume\"\r\n                    onChange={onChangeForm}\r\n                    >\r\n                        <option disabled selected>Select a CV</option>\r\n                        {renderResume(resumes)}\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Link to=\"/uploadcv\"><strong>...Or upload new CV?</strong></Link>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                    <Form.Label><strong>Message to employer</strong></Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={3} \r\n                    name=\"message\"\r\n                    value={form.message}\r\n                    onChange={onChangeForm}\r\n                    maxLength=\"100\"\r\n                    />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n            </Form>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ApplyJobPage","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Cv\\UploadCvPage.js",[],"C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\firebase\\firebase.js",[],"C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Employee\\UpdateProfile.js",["142"],"import CustomNavbar from '../../components/Navbar/Navbar'\r\nimport Footer from '../../components/Footer/Footer'\r\nimport {Form, Button, ListGroup, Nav} from 'react-bootstrap'\r\nimport {AuthContext} from '../../App'\r\nimport { useContext, useState } from 'react'\r\nimport {Redirect, useHistory} from 'react-router-dom'\r\nimport api from '../../api/api'\r\n\r\nfunction UpdateProfile(){\r\n    const {user, role, resumes, setResumes} = useContext(AuthContext)\r\n    const [name,setName] = useState('')\r\n    const history = useHistory()\r\n\r\n    const deleteCv = async (id) => {\r\n        const res = await api({\r\n            url:`/resume/${id}`,\r\n            method:'DELETE',\r\n        })\r\n        if(res.success){\r\n            setResumes(resumes.filter(resume => resume._id !== id))\r\n            history.push('/profile')\r\n        }\r\n    }\r\n\r\n    const handleSubmitForm = async() => {\r\n        const res = await api({\r\n            url:`/employee`,\r\n            method:'PATCH',\r\n            data:{name}\r\n        })\r\n        if(res.success){\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    if(!user || role==='employer') return <Redirect to='/'/>\r\n\r\n    const renderResumes = (resumes) => {\r\n        if(!resumes || resumes.length == 0) return <ListGroup.Item><Nav.Link href='/uploadcv'>Let upload some CV</Nav.Link></ListGroup.Item>\r\n        return resumes.map(resume => <ListGroup.Item \r\n            key={resume._id}\r\n            className='d-flex justify-content-between'\r\n            >\r\n                <Nav.Link href={resume.link}>{resume.title}</Nav.Link>\r\n                <Button variant='danger' onClick={() => deleteCv(resume._id)}> X </Button>\r\n            </ListGroup.Item>\r\n        )\r\n    } \r\n\r\n    return(\r\n        <>\r\n            <CustomNavbar />\r\n            <Form className=\"p-5 mt-5\" onSubmit={handleSubmitForm}>\r\n                <Form.Group>\r\n                    <Form.Label><strong>Email</strong></Form.Label>\r\n                    <Form.Control type=\"text\" \r\n                    \r\n                    readOnly\r\n                    defaultValue={user.email}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label><strong>Your Name</strong></Form.Label>\r\n                    <Form.Control type=\"text\" \r\n                    placeholder={user.name ? user.name : \"Enter your name\"}\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    required\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label><strong>Your CVs</strong></Form.Label>\r\n                    <ListGroup variant=\"flush\">\r\n                        {renderResumes(resumes)}\r\n                    </ListGroup>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Save Changes\r\n                </Button>\r\n            </Form>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Employee\\ManageApplication.js",["143","144"],"import CustomNavbar from '../../components/Navbar/Navbar'\r\nimport Footer from '../../components/Footer/Footer'\r\nimport {ListGroup, Nav, Badge, DropdownButton, Dropdown} from 'react-bootstrap'\r\nimport {Redirect, useHistory} from 'react-router-dom'\r\nimport {AuthContext} from '../../App'\r\nimport api from '../../api/api'\r\nimport CustomPagination from '../../components/Pagination/Pagination'\r\nimport {useContext, useState, useEffect} from 'react'\r\nimport {parseISO} from 'date-fns'\r\n\r\nfunction ManageApplication(){\r\n    const [apps, setApps] = useState([])\r\n    const [page, setPage] = useState(1) \r\n    const [total, setTotal] = useState(0)\r\n    const [limit, setLimit] = useState(8)\r\n    const [filter, setFilter] = useState(\"all\")\r\n    const {user, role} = useContext(AuthContext)\r\n    const history = useHistory()\r\n\r\n    const fetchApplications = async() => {\r\n        const params = {page,limit}\r\n        const res = await api({\r\n            url:'/application',\r\n            method:'GET',\r\n            params\r\n        })\r\n        if(res.success) {\r\n            setApps(res.data.applications)\r\n            setTotal(res.data.total)\r\n        }\r\n    }\r\n\r\n    const onChangePage = (page) => {\r\n        setPage(page)\r\n    }\r\n\r\n    const renderApplications = (applications) => {\r\n        return applications.map(application => <ListGroup.Item key={application._id}>\r\n            <div onClick={() => history.push(`/post/${application.job._id}`)}><h3 style={{ cursor:\"pointer\"}}>{application.job.title}</h3></div>\r\n            <strong>Your CV: </strong>{application.resume && <Nav.Link href={application.resume.link} target=\"_blank\">{application.resume.title}</Nav.Link>}\r\n            <div><strong>Submited At: </strong> {parseISO(application.createdAt).toString()}</div>\r\n            <strong>Status: </strong>\r\n            {application.active === 'pending' && <Badge variant='warning'>Pending</Badge>}\r\n            {application.active === 'rejected' && <Badge variant='secondary'>Rejected</Badge>}\r\n            {application.active === 'shortlisted' && <Badge variant='success'>Shortlisted</Badge>}\r\n        </ListGroup.Item>\r\n        )\r\n    }\r\n    \r\n    useEffect(() => {\r\n        fetchApplications()\r\n    },[page])\r\n    \r\n    if(!user || role === 'employer') return <Redirect to='/' />\r\n    \r\n    return(\r\n        <>\r\n            <CustomNavbar />\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <DropdownButton variant=\"secondary\" title=\"Filter Applications\" className=\"ml-5 mr-5 mt-5 pl-5 pr-5 pt-5\">\r\n                        <Dropdown.Item onClick={() => {setFilter(\"all\")}}>All Applications</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => {setFilter(\"pending\")}}>Pending Applications</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => {setFilter(\"rejected\")}}>Rejected Applications</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => {setFilter(\"shortlisted\")}}>Shortlisted Applications</Dropdown.Item>\r\n                    </DropdownButton>\r\n                </div>\r\n                <ListGroup className='ml-5 mr-5 p-5' variant=\"flush\">\r\n                    {filter === \"all\" && renderApplications(apps)}\r\n                    {filter === \"pending\" && renderApplications(apps.filter(app => app.active === 'pending'))}\r\n                    {filter === \"rejected\" && renderApplications(apps.filter(app => app.active === 'rejected'))}\r\n                    {filter === \"shortlisted\" && renderApplications(apps.filter(app => app.active === 'shortlisted'))}\r\n                </ListGroup>\r\n                <CustomPagination\r\n                    current={page}\r\n                    total={total}\r\n                    onChangePage={onChangePage}\r\n                    limit={limit}\r\n                />\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ManageApplication","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Employer\\UpdateProfile.js",[],"C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Job\\CreateJobPage.js",[],"C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\utils\\convertVND.js",[],"C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\utils\\data.js",[],"C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Employer\\ManageJobPosts.js",["145","146"],"import MainLayout from '../../components/Layout/MainLayout'\r\nimport api from '../../api/api'\r\nimport {ListGroup, Button, DropdownButton, Dropdown, Badge} from 'react-bootstrap'\r\nimport {Redirect, useHistory} from 'react-router-dom'\r\nimport {useState, useEffect, useContext} from 'react' \r\nimport {AuthContext} from '../../App'\r\nimport {parseISO} from 'date-fns'\r\nimport CustomPagination from '../../components/Pagination/Pagination'\r\n\r\nfunction ManageJobPosts(){\r\n    const [posts,setPosts] = useState([])\r\n    const [page, setPage] = useState(1) \r\n    const [total, setTotal] = useState(0)\r\n    const [limit, setLimit] = useState(12)\r\n    const [filter, setFilter] = useState(\"all\")\r\n    const {user,role} = useContext(AuthContext)\r\n    const history = useHistory()\r\n\r\n    const fetchPosts = async() => {\r\n        const params = {page,limit,company:user._id}\r\n        try {\r\n            const res = await api({\r\n                url:'/post',\r\n                method:'GET',\r\n                params\r\n            }) \r\n            if(res.success){\r\n                setPosts(res.data.posts)\r\n                setTotal(res.data.total)\r\n            }\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n\r\n    const closeJob = async(id) => {\r\n        try {\r\n            const res = await api({\r\n                url:`/post/${id}`,\r\n                method:'PATCH',\r\n                data:{active:false}\r\n            })\r\n            if(res.success){\r\n                fetchPosts()\r\n            }\r\n            \r\n        } catch (error) {\r\n            alert(\"Cannot close job\")\r\n        }\r\n\r\n    }\r\n\r\n    const reOpenJob = async(id) => {\r\n        try {\r\n            const res = await api({\r\n                url:`/post/${id}`,\r\n                method:'PATCH',\r\n                data:{\r\n                    active:true,\r\n                    createdAt: new Date().toISOString()\r\n                }\r\n            })\r\n            if(res.success) fetchPosts()\r\n        } catch (e) {\r\n            alert(\"Cannot re-open job\")\r\n        }\r\n    }\r\n\r\n    const renderPosts = (posts) => {\r\n        if(posts.length === 0) return (<div className=\"mt-5 mb-5\" ><h1>No job to display...</h1></div>)\r\n        return posts.map((post,index) => \r\n            <ListGroup.Item key={index}>\r\n                <h3 style={{ cursor:\"pointer\", display:\"inline-block\" }} onClick={() => {history.push(`/post/${post._id}`)}}>\r\n                    {post.title} \r\n                </h3>\r\n                &nbsp;\r\n                {post.active ? <Badge pill variant=\"primary\">active</Badge> : <Badge pill variant=\"warning\">expired</Badge>}\r\n                <div>Created At: {parseISO(post.createdAt).toString()}</div>\r\n                <div className=\"d-flex mt-2 justify-content-between\">\r\n                    <Button variant=\"primary\" \r\n                    onClick={() => history.push(`/post/private/${post._id}`)}\r\n                    >Show Applications</Button>\r\n                    \r\n                    {!post.active && \r\n                        <Button variant='info'\r\n                        onClick={() => reOpenJob(post._id)}\r\n                        >Re-open Job</Button>\r\n                    }\r\n\r\n                    {post.active && \r\n                        <Button variant=\"danger\"\r\n                        onClick={() => closeJob(post._id)}\r\n                        >Close Job</Button>\r\n                    }\r\n                </div>\r\n                \r\n            </ListGroup.Item>\r\n        ) \r\n    }\r\n\r\n    const onChangePage = (page) => {\r\n        setPage(page)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPosts()\r\n    },[page])\r\n\r\n    if(!user || role==='employoee') return <Redirect to='/'/>\r\n\r\n    return (\r\n        <MainLayout>\r\n            <div className=\"d-flex justify-content-end\">\r\n                <DropdownButton variant=\"secondary\" title=\"Filter Posts\" className=\"ml-5 mr-5 mt-5 pl-5 pr-5 pt-5\">\r\n                    <Dropdown.Item onClick={() => {setFilter(\"all\")}}>All Posts</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => {setFilter(\"active\")}}>Active Posts</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => {setFilter(\"expired\")}}>Expired Posts</Dropdown.Item>\r\n                </DropdownButton>\r\n            </div>\r\n\r\n            <ListGroup variant=\"flush\" className=\"ml-5 mr-5 p-5\">\r\n                {filter === \"all\" && renderPosts(posts)}\r\n                {filter === \"active\" && renderPosts(posts.filter(post => post.active))}\r\n                {filter === \"expired\" && renderPosts(posts.filter(post => !post.active))}\r\n            </ListGroup>\r\n\r\n            <CustomPagination \r\n                current={page}\r\n                total={total}\r\n                onChangePage={onChangePage}\r\n                limit={limit}\r\n            />\r\n        </MainLayout>\r\n    )\r\n}\r\n\r\nexport default ManageJobPosts","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\pages\\Job\\ListApplicants.js",["147"],"import MainLayout from '../../components/Layout/MainLayout'\r\nimport {useParams, Redirect} from 'react-router-dom'\r\nimport {ListGroup, Nav, Button, DropdownButton, Dropdown, Badge} from 'react-bootstrap'\r\nimport api from '../../api/api'\r\nimport { useEffect, useState, useContext } from 'react'\r\nimport {AuthContext} from '../../App'\r\nimport {parseISO} from 'date-fns'\r\n\r\nfunction ListApplicants(){\r\n    const {user} = useContext(AuthContext)\r\n    const {id} = useParams()\r\n    const [post,setPost] = useState(null)\r\n    const [filter, setFilter] = useState(\"all\")\r\n\r\n    const getDetailPost = async(id) => {\r\n        try {\r\n            const res = await api({\r\n                url:`/post/private/${id}`,\r\n                method:'GET'\r\n            }) \r\n            if(res.success){\r\n                setPost(res.data)\r\n            }\r\n        } catch (error) {\r\n            console.log(error.message)\r\n        }\r\n    }\r\n\r\n    const rejectApplication = async (appId) => {\r\n        try {\r\n            const res = await api({\r\n                url:`/application/${appId}`,\r\n                method:'PATCH',\r\n                data:{active:'rejected'}\r\n            }) \r\n            if(res.success){\r\n                getDetailPost(id)\r\n            }\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n\r\n    const shortlistApplication = async (appId) => {\r\n        try {\r\n            const res = await api({\r\n                url:`/application/${appId}`,\r\n                method:'PATCH',\r\n                data:{active:'shortlisted'}\r\n            }) \r\n            if(res.success){\r\n                getDetailPost(id)\r\n            }\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n\r\n    const renderPosts = (posts) => {\r\n        return posts.map((post,index) => <ListGroup.Item key={index}>\r\n            <div>\r\n                <strong>Applicant message:</strong> \r\n                <p className=\"mt-2\">{post.message}</p>\r\n            </div>\r\n            <div>\r\n                <strong>Applicant CV:</strong>\r\n                <Nav.Link href={post.resume.link} target=\"_blank\">Click here to download</Nav.Link>\r\n            </div>\r\n            <div>Created At: {parseISO(post.createdAt).toString()}</div>\r\n            <div>\r\n                {post.active === 'pending' && \r\n                    <div className=\"d-flex mt-2\">\r\n                        <Button className=\"mr-4\" variant=\"danger\" onClick={() => rejectApplication(post._id)}>Reject this application</Button>\r\n                        <Button variant=\"info\" onClick={() => shortlistApplication(post._id)}>Shortlist Application</Button>\r\n                    </div>\r\n                }\r\n                {post.active === 'rejected'  && <Badge variant=\"secondary\">Rejected</Badge>}\r\n                {post.active === 'shortlisted' &&  <Badge variant=\"success\">Shortlisted</Badge>}\r\n            </div>\r\n        </ListGroup.Item>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        getDetailPost(id)\r\n\r\n    },[])\r\n\r\n    if(post && post.owner !== user._id) return <Redirect to='/' />\r\n\r\n    return(\r\n        <MainLayout>\r\n            <div className=\"d-flex justify-content-end\">\r\n                <DropdownButton variant=\"secondary\" title=\"Filter Applications\" className=\"ml-5 mr-5 mt-5 pl-5 pr-5 pt-5\">\r\n                    <Dropdown.Item onClick={() => {setFilter(\"all\")}}>All Applications</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => {setFilter(\"active\")}}>Pending Applications</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => {setFilter(\"rejected\")}}>Rejected Applications</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => {setFilter(\"shortlisted\")}}>Shortlisted Applications</Dropdown.Item>\r\n                </DropdownButton>\r\n            </div>\r\n            <ListGroup className=\"ml-5 mr-5 p-5\" variant=\"flush\">\r\n                <h2>{post && post.title}</h2>\r\n                <div className=\"list-applicants\">\r\n                    {(post && filter === \"all\") && renderPosts(post.applications)}\r\n                    {(post && filter === \"active\") && renderPosts(post.applications.filter(app => app.active === 'pending'))}\r\n                    {(post && filter === \"rejected\") && renderPosts(post.applications.filter(app => app.active === 'rejected'))}\r\n                    {(post && filter === \"shortlisted\") && renderPosts(post.applications.filter(app => app.active === 'shortlisted'))}\r\n                </div>\r\n            </ListGroup>\r\n        </MainLayout>\r\n    )\r\n}\r\n\r\nexport default ListApplicants","C:\\Users\\andyv\\OneDrive\\Máy tính\\NodeJS\\job-finding-ui\\src\\utils\\verifyForm.js",[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":10,"column":9,"nodeType":"154","messageId":"155","endLine":10,"endColumn":11},{"ruleId":"152","severity":1,"message":"156","line":29,"column":9,"nodeType":"154","messageId":"155","endLine":29,"endColumn":15},{"ruleId":"157","severity":1,"message":"158","line":64,"column":6,"nodeType":"159","endLine":64,"endColumn":8,"suggestions":"160"},{"ruleId":"152","severity":1,"message":"161","line":12,"column":19,"nodeType":"154","messageId":"155","endLine":12,"endColumn":27},{"ruleId":"162","severity":1,"message":"163","line":43,"column":25,"nodeType":"164","messageId":"165","endLine":43,"endColumn":27},{"ruleId":"157","severity":1,"message":"166","line":63,"column":7,"nodeType":"159","endLine":63,"endColumn":21,"suggestions":"167"},{"ruleId":"152","severity":1,"message":"161","line":13,"column":19,"nodeType":"154","messageId":"155","endLine":13,"endColumn":27},{"ruleId":"162","severity":1,"message":"163","line":55,"column":25,"nodeType":"164","messageId":"165","endLine":55,"endColumn":27},{"ruleId":"168","severity":1,"message":"169","line":72,"column":17,"nodeType":"170","endLine":75,"endColumn":19},{"ruleId":"157","severity":1,"message":"171","line":87,"column":7,"nodeType":"159","endLine":87,"endColumn":17,"suggestions":"172"},{"ruleId":"168","severity":1,"message":"169","line":34,"column":21,"nodeType":"170","endLine":34,"endColumn":64},{"ruleId":"157","severity":1,"message":"173","line":31,"column":7,"nodeType":"159","endLine":31,"endColumn":9,"suggestions":"174"},{"ruleId":"162","severity":1,"message":"163","line":39,"column":39,"nodeType":"164","messageId":"165","endLine":39,"endColumn":41},{"ruleId":"152","severity":1,"message":"161","line":15,"column":19,"nodeType":"154","messageId":"155","endLine":15,"endColumn":27},{"ruleId":"157","severity":1,"message":"175","line":52,"column":7,"nodeType":"159","endLine":52,"endColumn":13,"suggestions":"176"},{"ruleId":"152","severity":1,"message":"161","line":14,"column":19,"nodeType":"154","messageId":"155","endLine":14,"endColumn":27},{"ruleId":"157","severity":1,"message":"166","line":107,"column":7,"nodeType":"159","endLine":107,"endColumn":13,"suggestions":"177"},{"ruleId":"157","severity":1,"message":"173","line":88,"column":7,"nodeType":"159","endLine":88,"endColumn":9,"suggestions":"178"},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'io' is defined but never used.","Identifier","unusedVar","'socket' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'verifyAuth'. Either include it or remove the dependency array.","ArrayExpression",["181"],"'setLimit' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.",["182"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'fetchCompany' and 'fetchPosts'. Either include them or remove the dependency array.",["183"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["184"],"React Hook useEffect has a missing dependency: 'fetchApplications'. Either include it or remove the dependency array.",["185"],["186"],["187"],"no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"194","fix":"200"},"Update the dependencies array to be: [verifyAuth]",{"range":"201","text":"202"},"Update the dependencies array to be: [fetchPosts, page, queries]",{"range":"203","text":"204"},"Update the dependencies array to be: [page, id, fetchCompany, fetchPosts]",{"range":"205","text":"206"},"Update the dependencies array to be: [id]",{"range":"207","text":"208"},"Update the dependencies array to be: [fetchApplications, page]",{"range":"209","text":"210"},"Update the dependencies array to be: [fetchPosts, page]",{"range":"211","text":"212"},{"range":"213","text":"208"},[2037,2039],"[verifyAuth]",[1918,1932],"[fetchPosts, page, queries]",[2506,2516],"[page, id, fetchCompany, fetchPosts]",[1007,1009],"[id]",[2203,2209],"[fetchApplications, page]",[3607,3613],"[fetchPosts, page]",[2996,2998]]